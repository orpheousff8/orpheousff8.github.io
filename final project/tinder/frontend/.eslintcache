[{"C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\index.js":"1","C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\App.js":"2","C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\Main.js":"4","C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\pages\\Home.js":"5","C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\pages\\CreateAccount.js":"6","C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\pages\\Preferences.js":"7"},{"size":642,"mtime":1608010927481,"results":"8","hashOfConfig":"9"},{"size":206,"mtime":1608011007057,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1607842568456,"results":"11","hashOfConfig":"9"},{"size":641,"mtime":1608082417444,"results":"12","hashOfConfig":"9"},{"size":1289,"mtime":1608043734989,"results":"13","hashOfConfig":"9"},{"size":7108,"mtime":1608111292722,"results":"14","hashOfConfig":"9"},{"size":9488,"mtime":1608138321441,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"daysco",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\App.js",[],"C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\Main.js",[],"C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\pages\\CreateAccount.js",["34"],"import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Row, Col, Checkbox, Button, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:3001\";\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n        md: { span: 8 }\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0\r\n        },\r\n        sm:\r\n        {\r\n            span: 16,\r\n            offset: 0\r\n        },\r\n        md:\r\n        {\r\n            span: 16,\r\n            offset: 0\r\n        }\r\n    }\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n    }\r\n};\r\n\r\nconst CreateAccount = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const history = useHistory();\r\n\r\n    const onFinish = async (values) => {\r\n        console.log('Received values of form: ', values);\r\n        let res;\r\n        try {\r\n            res = await axios.post(BACKEND_URL + \"/users/signup\", values);\r\n            if (res.status === 201) {\r\n                // console.log(res.data);\r\n                history.push(\"/preferences\");\r\n            } else if (res.status === 204){\r\n                message.error(\"User or Email has already been taken.\");\r\n                form.resetFields();\r\n            } else {\r\n                message.error(\"Error.\")\r\n                form.resetFields();\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            message.error(err.message);\r\n            form.resetFields();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"CreateAccount\">\r\n            {\r\n                // message.isVisible &&\r\n                // <Alert\r\n                //     message={message.text}\r\n                //     banner\r\n                //     closable\r\n                //     onClose={()=>setMessage({...message, isVisible:false, text:\"\"})}\r\n                // />\r\n            }\r\n            <Row justify=\"center\">\r\n                <Col></Col>\r\n                <Col xs={20} md={16}>\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        form={form}\r\n                        name=\"register\"\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                        }}\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"Name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    whitespace: true,\r\n                                    min: 2,\r\n                                    max: 36,\r\n                                    message: 'Please input your name between 2 and 36 letters!'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input className=\"input\" placeholder=\"Name\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            rules={[\r\n                                {\r\n                                    type: 'email',\r\n                                    message: 'The input is not valid E-mail!',\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Email!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input className=\"input\" placeholder=\"Email\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    whitespace: true,\r\n                                    min: 6,\r\n                                    max: 36,\r\n                                    message: 'Please input your password between 6 and 36 characters!',\r\n                                },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password className=\"input\" placeholder=\"Password\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            label=\"Confirm Password\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please confirm your password!',\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(rule, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject('The two passwords that you entered do not match!');\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password className=\"input\" placeholder=\"Confirm Password\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"agreement\"\r\n                            valuePropName=\"checked\"\r\n                            rules={[\r\n                                {\r\n                                    validator: (_, value) =>\r\n                                        value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n                                },\r\n                            ]}\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <Checkbox>\r\n                                I confirm that I am over 18 year-old.\r\n                            </Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item {...tailFormItemLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\" danger>\r\n                                Create Account\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateAccount;","C:\\Users\\sarac\\programming\\orpheousff8.github.io\\final project\\tinder\\frontend\\src\\pages\\Preferences.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":20},{"ruleId":"41","severity":1,"message":"46","line":3,"column":16,"nodeType":"43","messageId":"44","endLine":3,"endColumn":21},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]